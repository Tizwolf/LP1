//TIPOS COMO ARGUMENTOS (1),(2) y (3)
//Code 07

#include <iostream>
using namespace std;

class Year
{				//anho entre un rango min y max
	static const int min = 1800;
	static const int max = 2200;
	
	public:
		class Invalid {	};
		Year (int x) : y(x)
		{
			if (x<min || max<x)
			throw Invalid();
		}
		
		int year(){	return y; }
	private:
		int y;
};

class Date {
	
	public: 
		enum Month{
			jan = 1, feb, mar, apr, may, jun, jul, aug, 
			sep, oct, nov, dec
		};
		
		Date (Year yy , Month mm, int dd) : y(yy), m(mm), d(dd)
		//verifica e inicializa 
		{
			//aqui kjsfasn 
		}
	
	private: 
		Year y; 
		Month m;
		int d; 		//dia
		
};


int main()
try
{
	//Date dx1 (Year(1998), 4, 3);   			//error: 2do arg no es Month 
	//Date dx2 (4, Date:: mar, Year (1998)); 	//error: 1er arg no es Year
	//Date dx2 (Date::marm 4m Year (1998)); 	//error: 2do arg no es Month
	Date dx3(Year(1998), Date::mar, 30); 		//ok
	Date dx5(Year(4), Date::mar, 1998);			//run-time
	//error Year::Invalid
}

catch (Year::Invalid&){
	cerr<<"error: Anho invalido\n";
	return 1; 
}


